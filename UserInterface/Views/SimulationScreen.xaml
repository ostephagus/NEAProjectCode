<local:SwappableScreen x:Class="UserInterface.Views.SimulationScreen"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:UserInterface.Views"
             xmlns:helpercontrols="clr-namespace:UserInterface.HelperControls"
             xmlns:helperclasses="clr-namespace:UserInterface.HelperClasses"
             xmlns:viewmodels="clr-namespace:UserInterface.ViewModels"
             xmlns:converters="clr-namespace:UserInterface.Converters"
             d:DataContext="{d:DesignInstance Type=viewmodels:SimulationScreenVM}"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <local:SwappableScreen.Resources>
        <ResourceDictionary>
            <converters:SignificantFigures x:Key="SignificantFiguresConverter" />
            <converters:VisualisationXCoordinate x:Key="XCoordinateConverter" />
            <converters:VisualisationYCoordinate x:Key="YCoordinateConverter" />
            <converters:XCoordinateDifference x:Key="XCoordinateDifferenceConverter" />
            <converters:YCoordinateDifference x:Key="YCoordinateDifferenceConverter" />
            <converters:PolarListToRectList x:Key="PolarListToRectListConverter" />
        </ResourceDictionary>
    </local:SwappableScreen.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" MaxHeight="150"/>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" MaxWidth="50" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="8*" />
        </Grid.ColumnDefinitions>

        <helpercontrols:ResizableCentredTextBox Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3" Text="Simulating" MaxWidth="300" />

        <StackPanel Grid.Row="1" Grid.Column="0">
            <StackPanel.Resources>
                <Style TargetType="Button">
                    <Setter Property="Margin" Value="0 0 0 0" />
                </Style>
            </StackPanel.Resources>
            <Button x:Name="BtnParametersSelect" Command="{Binding SwitchPanelCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Self}}">
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="Background" Value="LightGray" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding CurrentButton}" Value="BtnParametersSelect">
                                <Setter Property="Background" Value="#AAAAAA" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
                <Image Source="/Images/ParametersIcon.png" />
            </Button>
            <Button x:Name="BtnUnitsSelect" Command="{Binding SwitchPanelCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Self}}">
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="Background" Value="LightGray" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding CurrentButton}" Value="BtnUnitsSelect">
                                <Setter Property="Background" Value="#AAAAAA" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
                <Image Source="/Images/UnitsIcon.png" />
            </Button>
            <Button x:Name="BtnVisualisationSettingsSelect" Command="{Binding SwitchPanelCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Self}}">
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="Background" Value="LightGray" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding CurrentButton}" Value="BtnVisualisationSettingsSelect">
                                <Setter Property="Background" Value="#AAAAAA" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
                <Image Source="/Images/VisualisationIcon.png" />
            </Button>
            <Button x:Name="BtnRecordingSelect" Command="{Binding SwitchPanelCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Self}}">
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="Background" Value="LightGray" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding CurrentButton}" Value="BtnRecordingSelect">
                                <Setter Property="Background" Value="#AAAAAA" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
                <Image Source="/Images/RecordingIcon.png" />
            </Button>
        </StackPanel>

        <StackPanel Grid.Row="2" Grid.Column="1">
            <StackPanel.Style>
                <Style TargetType="StackPanel">
                    <Setter Property="Visibility" Value="Collapsed" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding CurrentButton}" Value="BtnParametersSelect">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </StackPanel.Style>
            <Label>Fluid Velocity</Label>
            <helpercontrols:SliderWithValue x:Name="SliderInVel" Minimum="0" Maximum="40" Value="{Binding InVel}" />
            <Label>Material Friction</Label>
            <helpercontrols:SliderWithValue x:Name="SliderChi" Minimum="0" Maximum="1" Value="{Binding Chi}" />
        </StackPanel>
        <Label Grid.Row="2" Grid.Column="1">
            <Label.Style>
                <Style TargetType="Label">
                    <Setter Property="Visibility" Value="Collapsed" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding CurrentButton}" Value="BtnUnitsSelect">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Label.Style>
            This is the units selection panel
        </Label>
        <StackPanel Grid.Row="2" Grid.Column="1">
            <StackPanel.Style>
                <Style TargetType="StackPanel">
                    <Setter Property="Visibility" Value="Collapsed" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding CurrentButton}" Value="BtnVisualisationSettingsSelect">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </StackPanel.Style>
            <Label>Field to visualise</Label>
            <RadioButton x:Name="RBPressure" GroupName="FieldSelector" IsChecked="{Binding PressureChecked}">Pressure</RadioButton>
            <RadioButton x:Name="RBVelocity" GroupName="FieldSelector" IsChecked="{Binding VelocityChecked}">Velocity</RadioButton>
            <Label>Minimum value</Label>
            <helpercontrols:SliderWithValue x:Name="SliderMin" Minimum="{Binding VisLowerBound, Mode=OneWay}" Maximum="{Binding VisUpperBound, Mode=OneWay}" Value="{Binding VisMin}"/>
            <Label>Maximum value</Label>
            <helpercontrols:SliderWithValue x:Name="SliderMax" Minimum="{Binding VisLowerBound, Mode=OneWay}" Maximum="{Binding VisUpperBound, Mode=OneWay}" Value="{Binding VisMax}" />
            <StackPanel Orientation="Horizontal">
                <Label>Streamlines</Label>
                <CheckBox x:Name="CBContourLines" IsChecked="{Binding StreamlinesEnabled}" />
            </StackPanel>
            <Label>Streamline contour tolerance</Label>
            <helpercontrols:SliderWithValue x:Name="SliderContourTolerance" Minimum="0" Maximum="0.05" Value="{Binding ContourTolerance}" />
            <Label>Streamline contour spacing</Label>
            <helpercontrols:SliderWithValue x:Name="SliderContourSpacing" Minimum="0" Maximum="0.5" Value="{Binding ContourSpacing}" />
        </StackPanel>
        <Label Grid.Row="2" Grid.Column="1">
            <Label.Style>
                <Style TargetType="Label">
                    <Setter Property="Visibility" Value="Collapsed" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding CurrentButton}" Value="BtnRecordingSelect">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Label.Style>
            This is the recording settings panel
        </Label>
        <Canvas Grid.Row="1" Grid.RowSpan="2" Grid.Column="2" Margin="10 0 10 5" x:Name="SimulationCanvas" MouseLeftButtonDown="CanvasMouseLeftButtonDown" MouseRightButtonDown="CanvasMouseRightButtonDown" MouseLeftButtonUp="CanvasMouseLeftButtonUp" MouseMove="CanvasMouseMove">
            <ContentControl Width="{Binding ActualWidth, ElementName=SimulationCanvas, Mode=OneWay}" Height="{Binding ActualHeight, ElementName=SimulationCanvas, Mode=OneWay}" x:Name="VisualisationControlHolder" Content="{Binding VisualisationControl, Mode=OneWay}">
                <ContentControl.Style>
                    <Style TargetType="ContentControl">
                        <Setter Property="Opacity" Value="1" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding EditingObstacles}" Value="True">
                                <Setter Property="Opacity" Value="0.5" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ContentControl.Style>
            </ContentControl>
            <Polygon x:Name="ObstaclePolygon" Fill="Black">
                <Polygon.Points>
                    <MultiBinding Converter="{StaticResource PolarListToRectListConverter}" ConverterParameter="0.5,0.5">
                        <Binding Path="ObstaclePoints" />
                        <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType=Canvas}" Path="ActualWidth" />
                        <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType=Canvas}" Path="ActualHeight" />
                    </MultiBinding>
                </Polygon.Points>
            </Polygon>
        </Canvas>
        <StackPanel Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="3" Orientation="Horizontal" HorizontalAlignment="Right">
            <StackPanel.Resources>
                <Style TargetType="Button">
                    <Setter Property="Margin" Value="2.5 0 2.5 5" />
                </Style>
            </StackPanel.Resources>
            <TextBlock Margin="0 0 5 0"><Run Text="Visualisation: " /><Run x:Name="RunVisFPS" Text="{Binding VisFPS, Converter={StaticResource SignificantFiguresConverter}, ConverterParameter=3, Mode=OneWay}"/><Run Text=" FPS, Backend: " /><Run x:Name="RunBackFPS" Text="{Binding BackFPS, Converter={StaticResource SignificantFiguresConverter}, ConverterParameter=3, Mode=OneWay}" /><Run Text=" FPS."/></TextBlock>
            <Button Command="{Binding EditObstaclesCommand}">Edit simulation structure</Button>
            <Button Command="{Binding CreatePopupCommand}" CommandParameter="{x:Type local:AdvancedParameters}">Advanced parameters</Button>
            <Button>Save as image</Button>
            <Button>Save as video</Button>
            <Button Content="{Binding BackendButtonText}" Command="{Binding BackendCommand}" />
        </StackPanel>
    </Grid>
</local:SwappableScreen>
